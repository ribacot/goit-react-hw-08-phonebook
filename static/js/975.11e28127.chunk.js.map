{"version":3,"file":"static/js/975.11e28127.chunk.js","mappings":"8SASe,SAASA,EAAT,GAAwC,IAAD,IAAlBC,QAAAA,OAAkB,SACpD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAyBF,EAAAA,EAAAA,UAAS,IAAlC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBF,MACFG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAASG,EAAS,YACnB,GAAE,CAACH,EAAOG,IAEX,IAAMK,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,OAEM,SAAAjB,GAClB,OAAQA,GACN,IAAK,OACHC,EAAQgB,EAAMC,QACd,MACF,IAAK,QACHf,EAAQc,EAAMC,QACd,MACF,IAAK,WACHb,EAAYY,EAAMC,QAClB,MACF,UAGH,CACDC,CAAYnB,EACb,EAIKoB,EAAU,mCAAG,WAAML,GAAN,yEACjBA,EAAEM,iBACIC,EAAU,CAAEtB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GACzBmB,EAAY,CAAErB,MAAAA,EAAOE,SAAAA,GAGvBO,EADJb,GACa0B,EAAAA,EAAAA,IAAeD,IACfE,EAAAA,EAAAA,IAAgBH,KAC5BxB,GAXuBW,EAAS,KAajCR,EAAQ,IACRE,EAAQ,IACRE,EAAY,IAZK,2CAAH,sDAehB,OACE,SAAC,IAAD,CAAWqB,MAAO5B,EAAU,QAAU,eAAtC,UACE,kBAAM6B,UAAWC,EAAAA,EAAAA,iBAAsBC,SAAUT,EAAjD,WACItB,IACA,iBAAK6B,UAAWC,EAAAA,EAAAA,YAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWE,QAAQ,OAArC,mBAGA,kBACEH,UAAWC,EAAAA,EAAAA,MACXG,GAAG,OACHC,KAAK,OACLhC,KAAK,OAGLiC,UAAQ,EACRC,SAAUpB,EACVG,MAAOjB,QAIb,iBAAK2B,UAAWC,EAAAA,EAAAA,YAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWE,QAAQ,QAArC,qBAGA,kBACEH,UAAWC,EAAAA,EAAAA,MACXG,GAAG,QACHC,KAAK,QACLhC,KAAK,QAGLiC,UAAQ,EACRC,SAAUpB,EACVG,MAAOf,QAGX,iBAAKyB,UAAWC,EAAAA,EAAAA,YAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWE,QAAQ,WAArC,uBAGA,kBACEH,UAAWC,EAAAA,EAAAA,MACXG,GAAG,WACHC,KAAK,WACLhC,KAAK,WAGLiC,UAAQ,EACRC,SAAUpB,EACVG,MAAOb,QAGX,iBAAK+B,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAA/C,WACE,mBACEV,UAAWC,EAAAA,EAAAA,QACXI,KAAK,SACLM,SACExC,GAAWI,IAAUE,GAAYJ,IAASE,IAAUE,EAJxD,SAOGN,EAAU,QAAU,iBAEtBA,IACC,mBAAQ6B,UAAWC,EAAAA,EAAAA,QAAaI,KAAK,SAASO,QAjFpC,kBAAM9B,EAAS,UAAf,EAiFV,2BAQX,C","sources":["components/authForma/authForma.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from '../form/FormFone.module.css';\nimport Container from 'components/container/Container';\nimport { loginUserThunk, userCreateThunk } from 'redux/auth/authThunk';\nimport { selectAuth } from 'redux/selectors';\n\nexport default function AuthForma({ isLogIn = true }) {\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const { token } = useSelector(selectAuth);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    token && navigate('/contacts');\n  }, [token, navigate]);\n\n  const hendleChange = e => {\n    const { name, value } = e.target;\n\n    const switchInput = name => {\n      switch (name) {\n        case 'name':\n          setName(value.trim());\n          break;\n        case 'email':\n          setMail(value.trim());\n          break;\n        case 'password':\n          setPassword(value.trim());\n          break;\n        default:\n          return;\n      }\n    };\n    switchInput(name);\n  };\n  const onSingInNav = () => navigate('/');\n  const onSingUpNav = () => navigate('/singup');\n\n  const formSubmit = async e => {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    const loginUser = { email, password };\n\n    isLogIn\n      ? dispatch(loginUserThunk(loginUser))\n      : dispatch(userCreateThunk(newUser));\n    !isLogIn && onSingInNav();\n\n    setName('');\n    setMail('');\n    setPassword('');\n  };\n\n  return (\n    <Container title={isLogIn ? 'LogIn' : 'Registration'}>\n      <form className={css.form_Add_Contact} onSubmit={formSubmit}>\n        {!isLogIn && (\n          <div className={css.decor_input}>\n            <label className={css.lable} htmlFor=\"name\">\n              Name\n            </label>\n            <input\n              className={css.input}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              // pattern={validName}\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={hendleChange}\n              value={name}\n            />\n          </div>\n        )}\n        <div className={css.decor_input}>\n          <label className={css.lable} htmlFor=\"email\">\n            E-mail\n          </label>\n          <input\n            className={css.input}\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            // pattern={validPhone}\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={hendleChange}\n            value={email}\n          />\n        </div>\n        <div className={css.decor_input}>\n          <label className={css.lable} htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className={css.input}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            // pattern={validPhone}\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={hendleChange}\n            value={password}\n          />\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <button\n            className={css.btn_add}\n            type=\"submit\"\n            disabled={\n              isLogIn ? !email || !password : !name || !email || !password\n            }\n          >\n            {isLogIn ? 'Login' : 'Registration'}\n          </button>\n          {isLogIn && (\n            <button className={css.btn_add} type=\"button\" onClick={onSingUpNav}>\n              SingUp\n            </button>\n          )}\n        </div>\n      </form>\n    </Container>\n  );\n}\n"],"names":["AuthForma","isLogIn","useState","name","setName","email","setMail","password","setPassword","token","useSelector","selectAuth","navigate","useNavigate","dispatch","useDispatch","useEffect","hendleChange","e","target","value","trim","switchInput","formSubmit","preventDefault","newUser","loginUser","loginUserThunk","userCreateThunk","title","className","css","onSubmit","htmlFor","id","type","required","onChange","style","display","justifyContent","disabled","onClick"],"sourceRoot":""}