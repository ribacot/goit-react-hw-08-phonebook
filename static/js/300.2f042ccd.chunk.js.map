{"version":3,"file":"static/js/300.2f042ccd.chunk.js","mappings":"2RAae,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAAzBF,SACAG,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IAAtBD,MAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACPN,GAASI,EAAS,SACpB,GAAE,CAACJ,EAAOI,KAEXE,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,WAAYX,EAASY,SAChCZ,EAASY,QACRT,IACCU,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAA8DV,KAChEH,EAASY,QAAUP,GAASS,EAAAA,EAAAA,MAC9B,GAAE,CAACd,EAASY,OAAQP,EAAUF,IAE/B,IAAMY,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,MAcdlB,EAASmB,MACP,qBAAGvB,KAAgBwB,gBAAkBF,EAAME,cAAcC,MAAzD,IAEEC,MAAM,IAAD,OAAKJ,EAAL,4BAfW,SAAAtB,GAClB,OAAQA,GACN,IAAK,OACHC,EAAQqB,EAAMG,QACd,MACF,IAAK,SACHtB,EAAUmB,EAAMG,QAChB,MACF,UAGH,CAKGE,CAAY3B,EACjB,EAWD,OACE,SAAC,IAAD,CAAW4B,MAAM,cAAjB,UACE,kBAAMC,UAAWC,EAAAA,EAAAA,iBAAsBC,SAXxB,SAAAX,GACjBA,EAAEY,iBACFvB,GAASwB,EAAAA,EAAAA,IAAiB,CAAEjC,KAAAA,EAAME,OAAAA,KAClCS,EAAS,aACTV,EAAQ,IACRE,EAAU,GACX,EAKG,WACE,iBAAK0B,UAAWC,EAAAA,EAAAA,YAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWI,QAAQ,OAArC,mBAGA,kBACEL,UAAWC,EAAAA,EAAAA,MACXK,GAAG,OACHC,KAAK,OACLpC,KAAK,OAGLqC,UAAQ,EACRC,SAAUnB,EACVG,MAAOtB,QAGX,iBAAK6B,UAAWC,EAAAA,EAAAA,YAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWI,QAAQ,SAArC,qBAGA,kBACEL,UAAWC,EAAAA,EAAAA,MACXK,GAAG,SACHC,KAAK,MACLpC,KAAK,SAGLqC,UAAQ,EACRC,SAAUnB,EACVG,MAAOpB,QAGX,iBAAK2B,UAAWC,EAAAA,EAAAA,aAAhB,WACE,mBACED,UAAWC,EAAAA,EAAAA,QACXM,KAAK,SACLG,UAAWvC,IAASE,EAHtB,0BAOA,mBAAQ2B,UAAWC,EAAAA,EAAAA,QAAaM,KAAK,SAASI,QA7CtC,kBAAM7B,EAAS,YAAf,EA6CR,0BAOT,C","sources":["components/form/FormPhone.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport css from './FormFone.module.css';\nimport {\n  addContactsThunk,\n  getContactsThunk,\n} from 'redux/contacts/productThunk';\nimport Container from 'components/container/Container';\nimport { instance } from 'redux/auth/instansAxiosAPI';\nimport { selectAuth, selectContacts } from 'redux/selectors';\n\nexport default function FormPhone() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { contacts } = useSelector(selectContacts);\n  const { token } = useSelector(selectAuth);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    !token && navigate('/login');\n  }, [token, navigate]);\n\n  useEffect(() => {\n    console.log('contacts', contacts.length);\n    !contacts.length &&\n      token &&\n      (instance.defaults.headers.common['Authorization'] = `Bearer ${token}`);\n    !contacts.length && dispatch(getContactsThunk());\n  }, [contacts.length, dispatch, token]);\n\n  const hendleChange = e => {\n    const { name, value } = e.target;\n\n    const switchInput = name => {\n      switch (name) {\n        case 'name':\n          setName(value.trim());\n          break;\n        case 'number':\n          setNumber(value.trim());\n          break;\n        default:\n          return;\n      }\n    };\n    contacts.some(\n      ({ name }) => name.toLowerCase() === value.toLowerCase().trim()\n    )\n      ? alert(` ${value} is already in contacts`)\n      : switchInput(name);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    dispatch(addContactsThunk({ name, number }));\n    navigate('/contacts');\n    setName('');\n    setNumber('');\n  };\n  const onClose = () => navigate('/contacts');\n\n  return (\n    <Container title=\"Add contact\">\n      <form className={css.form_Add_Contact} onSubmit={formSubmit}>\n        <div className={css.decor_input}>\n          <label className={css.lable} htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            className={css.input}\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            // pattern={validName}\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={hendleChange}\n            value={name}\n          />\n        </div>\n        <div className={css.decor_input}>\n          <label className={css.lable} htmlFor=\"number\">\n            Number\n          </label>\n          <input\n            className={css.input}\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            // pattern={validPhone}\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={hendleChange}\n            value={number}\n          />\n        </div>\n        <div className={css.btnContainer}>\n          <button\n            className={css.btn_add}\n            type=\"submit\"\n            disabled={!name || !number}\n          >\n            Add contact\n          </button>\n          <button className={css.btn_add} type=\"button\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </form>\n    </Container>\n  );\n}\n"],"names":["FormPhone","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","token","selectAuth","dispatch","useDispatch","navigate","useNavigate","useEffect","console","log","length","instance","getContactsThunk","hendleChange","e","target","value","some","toLowerCase","trim","alert","switchInput","title","className","css","onSubmit","preventDefault","addContactsThunk","htmlFor","id","type","required","onChange","disabled","onClick"],"sourceRoot":""}